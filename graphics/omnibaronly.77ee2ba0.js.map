{"mappings":"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","sources":["src/graphics/OmnibarOnly.tsx","src/graphics/components/Omnibar.tsx","src/graphics/components/CarouselComponent.tsx","src/helpers/utils.ts"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport styled from 'styled-components'\r\nimport { createRoot } from 'react-dom/client';\r\nimport { Omnibar } from './components/Omnibar';\r\n\r\nexport function OmnibarOnly() {\r\n\treturn (\r\n\t\t<StyledOmnibarOnly>\r\n\t\t\t<Content>\r\n\t\t\t\t<Omnibar />\r\n\t\t\t</Content>\r\n\t\t</StyledOmnibarOnly>\r\n\t);\r\n}\r\n\r\nconst StyledOmnibarOnly = styled.div`\r\n\tposition: relative;\r\n\twidth: 1920px;\r\n\theight: 1080px;\r\n\tbackground-color: transparent;\r\n`;\r\n\r\nconst Content = styled.div`\r\n\tpadding-bottom: 12px;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: flex-end;\r\n\t\r\n\twidth: 100%;\r\n\theight: 100%;\r\n`;\r\n\r\nconst root = createRoot(document.getElementById('root')!);\r\nroot.render(<OmnibarOnly />);","import React, { useState, useEffect, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { CarouselComponent } from './CarouselComponent';\r\nimport { YoutubeLogo, DiscordLogo, TwitterLogo, Butterfly } from \"@phosphor-icons/react\";\r\nimport { EventData, Socials, EventInfo } from 'schemas';\r\nimport { useReplicant } from '@nodecg/react-hooks';\r\nimport { IntermissionData } from 'schemas';\r\nimport { formatDateHM, formatDateMDY } from '../../helpers/utils'\r\n\r\nexport const Omnibar: React.FC = () => {\r\n\tconst [eventData, setEventData] = useReplicant<EventData>('eventData', { bundle: 'squidwest-layout-controls'});\r\n\tconst [socials] = useReplicant<Socials>('socials', { bundle: 'squidwest-layout-controls'});\r\n\tconst [intermissionData] = useReplicant<IntermissionData>('intermission', { bundle: 'squidwest-layout-controls'});\r\n\r\n\tconst [currentEvent, setCurrentEvent] = useState<EventInfo>({ name: \"Current Event Name\", location: \"Event Location\", number: 1, date: \"Today\" });\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!eventData) return;\r\n   \r\n\t\tsetCurrentEvent(eventData.currentEvent);\r\n\t}, [eventData]);\r\n\r\n    const [time, setTime] = useState(new Date());\r\n\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(() => { \r\n\t\t\tsetTime(new Date());\r\n\t\t}, 1000);\r\n\r\n\t\treturn () => {\r\n\t\t\tclearInterval(interval);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst memoTime = useMemo(() => { return time; }, [time]);\r\n\r\n    return (\r\n        <OmnibarWrapper>\r\n\t\t\t<OmnibarItem $show={intermissionData ? intermissionData.showTime : true}>\r\n\t\t\t\t<TimeDate $border={true}>\r\n\t\t\t\t\t<TimeDisplay>\r\n\t\t\t\t\t\t{formatDateHM(memoTime)}\r\n\t\t\t\t\t</TimeDisplay>\r\n\t\t\t\t\t<DateDisplay>\r\n\t\t\t\t\t\t{formatDateMDY(memoTime)}\r\n\t\t\t\t\t</DateDisplay>\r\n\t\t\t\t</TimeDate>\r\n\t\t\t</OmnibarItem>\r\n\t\t\t<OmnibarItem $show={intermissionData ? intermissionData.showEvent : true}>\r\n\t\t\t\t<EventSection $border={true}>\r\n\t\t\t\t\t<Logo src='/bundles/twinsquiddies-layouts/images/TwinSquiddiesFlatTransparent.png' alt=\"Twin Squiddies Logo\" />\r\n\t\t\t\t\t{currentEvent.number > 0 && (\r\n\t\t\t\t\t<EventNumberText>\r\n            \t    \t#{currentEvent.number}\r\n            \t\t</EventNumberText>)}\r\n\t\t\t\t</EventSection>\r\n\t\t\t</OmnibarItem>\r\n\t\t\t<TextOmnibarItem $show={intermissionData ? intermissionData.showLocation : true} $maxWidth=\"24rem\">\r\n\t\t\t\t{currentEvent.location !== '' && (\r\n\t\t\t\t<LocationWrapper $border={true}>\r\n\t\t\t\t\t<LocationText>\r\n            \t    \t{currentEvent.location}\r\n            \t\t</LocationText>\r\n\t\t\t\t</LocationWrapper>\r\n\t\t\t\t)}\r\n\t\t\t</TextOmnibarItem>\r\n\t\t\t<TextOmnibarItem $show={intermissionData ? intermissionData.showFlavorText : true} $maxWidth=\"20rem\">\r\n\t\t\t\t<TourneyWrapper $border={true}>\r\n\t\t\t\t\t<TourneyPlaceholder>\r\n\t\t\t\t\t\t{intermissionData ? intermissionData.flavorText : \"\"}\r\n\t\t\t\t\t</TourneyPlaceholder>\r\n\t\t\t\t</TourneyWrapper>\r\n\t\t\t</TextOmnibarItem>\r\n            <CarouselWrapper $border={true}>\r\n\t\t\t\t<CarouselComponent speed={7000} transitionSpeed={1000}>\r\n\t\t\t\t\t<CarouselRow>\r\n\t\t\t\t\t\t<LogoText>Follow Twin Squiddies!</LogoText>\r\n\t\t\t\t\t</CarouselRow>\r\n\t\t\t\t\t<CarouselRow>\r\n                        <StyledButterfly />\r\n                        <LogoText>@twinsquiddies.bsky.social</LogoText>\r\n\t\t\t\t\t</CarouselRow>\r\n\t\t\t\t\t<CarouselRow>\r\n                        <StyledDiscordLogo />\r\n                        <LogoText>discord.gg/LCL</LogoText>\r\n\t\t\t\t\t</CarouselRow>\r\n\t\t\t\t\t<CarouselRow>\r\n\t\t\t\t\t\t<LogoText>Follow SquidWest!</LogoText>\r\n\t\t\t\t\t</CarouselRow>\r\n\t\t\t\t\t<CarouselRow>\r\n                        <StyledYoutubeLogo />\r\n                        <LogoText>{socials ? socials.youtube : \"\"}</LogoText>\r\n\t\t\t\t\t</CarouselRow>\r\n\t\t\t\t\t<CarouselRow>\r\n                        <StyledTwitterLogo />\r\n                        <LogoText>{socials ? socials.twitter : \"\"}</LogoText>\r\n\t\t\t\t\t</CarouselRow>\r\n\t\t\t\t\t<CarouselRow>\r\n                        <StyledButterfly />\r\n                        <LogoText>{socials ? socials.bluesky : \"\"}</LogoText>\r\n\t\t\t\t\t</CarouselRow>\r\n\t\t\t\t\t<CarouselRow>\r\n                        <StyledDiscordLogo />\r\n                        <LogoText>{socials ? socials.discord : \"\"}</LogoText>\r\n\t\t\t\t\t</CarouselRow>\r\n\t\t\t\t</CarouselComponent>\r\n\t\t\t</CarouselWrapper>\r\n            <OmnibarElement as=\"img\" src='/bundles/twinsquiddies-layouts/images/SW_Logo_Red_bg.png' alt=\"SquidWest Logo\" />\r\n\t\t</OmnibarWrapper>\r\n    );\r\n}\r\n\r\nconst OmnibarWrapper = styled.div`\r\n\tposition: relative;\r\n  \tdisplay: flex;\r\n  \tflex-direction: row;\r\n  \twidth: calc(100% - 40px);\r\n  \tbackground-color: var(--omnibar-color);\r\n\theight: 122px;\r\n\tborder: 8px solid var(--omnibar-border);\r\n\tborder-radius: 0.5rem;\r\n  \tmargin: 10px 20px;\r\n`;\r\n\r\nconst OmnibarItem = styled.div<{ $show: boolean }>`\r\n\tposition: relative;\r\n\tdisplay: ${({ $show }) => $show ? 'block' : 'none'};\r\n`;\r\n\r\nconst TextOmnibarItem = styled(OmnibarItem)<{ $maxWidth: string }>`\r\n\tmax-width: ${({$maxWidth}) => $maxWidth};\r\n`;\r\n\r\nconst OmnibarElement = styled.div<{$border?: boolean}>`\r\n\tposition: relative;\r\n\tpadding: 10px;\r\n\tcolor: var(--omnibar-text);\r\n\tfont-size: 20pt;\r\n\tborder-right: ${props => props.$border ? '5px solid var(--omnibar-divider)' : ''};\r\n`;\r\n\r\nconst TimeDate = styled(OmnibarElement)`\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst TimeDisplay = styled.div`\r\n\tposition: relative;\r\n\tmargin: auto;\r\n\tfont-size: 35pt;\r\n`;\r\n\r\nconst DateDisplay = styled.div`\r\n\tposition: relative;\r\n\tmargin: auto;\r\n\tfont-size: 20pt;\r\n`;\r\n\r\nconst EventSection = styled(OmnibarElement)`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\theight: 100%;\r\n`;\r\n\r\nconst EventNumberText = styled.div`\r\n\tmargin: 8px;\r\n\tfont-size: 30pt;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n    height: 7rem;\r\n    object-fit: contain;\r\n`;\r\n\r\nconst LocationWrapper = styled(OmnibarElement)`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\talign-items: center;\r\n`;\r\n\r\nconst LocationText = styled.div`\r\n\tmargin: auto 8px;\r\n\tfont-size: 25pt;\r\n`;\r\n\r\nconst TourneyWrapper = styled(OmnibarElement)`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n`\r\n\r\nconst TourneyPlaceholder = styled.div`\r\n\tfont-size: 25pt;\r\n`\r\n\r\nconst CarouselWrapper = styled(OmnibarElement)`\r\n\tposition: relative;\r\n\theight: 100%;\r\n\tflex-grow: 1;\r\n`;\r\n\r\nconst CarouselRow = styled.div`\r\n\tposition: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n\talign-items: center;\r\n    justify-content: center;\r\n    max-height: 100%;\r\n    height: 100%;\r\n\tfont-size: 40pt;\r\n`;\r\n\r\nconst StyledYoutubeLogo = styled(YoutubeLogo)`\r\n\twidth: 1em;\r\n    object-fit: contain;\r\n\tmargin-right: 20px;\r\n`;\r\n\r\nconst StyledTwitterLogo = styled(TwitterLogo)`\r\n\twidth: 1em;\r\n    object-fit: contain;\r\n\tmargin-right: 20px;\r\n`;\r\n\r\nconst StyledButterfly = styled(Butterfly)`\r\n\twidth: 1em;\r\n    object-fit: contain;\r\n\tmargin-right: 20px;\r\n`;\r\n\r\nconst StyledDiscordLogo = styled(DiscordLogo)`\r\n\twidth: 1em;\r\n    object-fit: contain;\r\n\tmargin-right: 20px;\r\n`;\r\n\r\nconst LogoText = styled.div`\r\n\tfont-size: 35pt;\r\n`;","import React, { useState, useEffect, useRef, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface CarouselComponentProps {\r\n    children: React.ReactNode;\r\n    playing?: boolean; //Whether or not the carousel is currently playing\r\n    speed?: number;\r\n    transitionSpeed?: number;\r\n    once?: boolean;\r\n    startIndex?: number;\r\n}\r\n\r\nconst DEFAULT_SPEED = 5000;\r\nconst DEFAULT_TRANSITION_SPEED = 1000;\r\n\r\nexport const CarouselComponent: React.FC<CarouselComponentProps> = ({ children, playing = true, speed, transitionSpeed, once, startIndex }) => {\r\n    const [carouselIndex, setCarouselIndex] = useState(startIndex || 0);\r\n    const carouselIntervalId = useRef<number | null>(null);\r\n    const activeCarouselIndexRef = useRef(startIndex || 0);\r\n\r\n    const childElements = useMemo(() => {\r\n        return React.Children.toArray(children);\r\n    }, [children]);\r\n\r\n    useEffect(() => {\r\n\r\n        if(playing && childElements.length > 1) {\r\n            //Force it to the last element\r\n            if(activeCarouselIndexRef.current >= childElements.length) {\r\n                setCarouselIndex(childElements.length - 1);\r\n                activeCarouselIndexRef.current = childElements.length - 1;\r\n            }\r\n\r\n            //Function ID from Set Interval, to clear it later\r\n            carouselIntervalId.current = window.setInterval(() => {\r\n                if(!playing) return;\r\n\r\n                if(once && activeCarouselIndexRef.current + 1 >= childElements.length) {\r\n                    if(carouselIntervalId.current) clearInterval(carouselIntervalId.current);\r\n                    return;\r\n                }\r\n\r\n                const nextIndex = (activeCarouselIndexRef.current + 1) % childElements.length;\r\n\r\n                setCarouselIndex(nextIndex);\r\n                activeCarouselIndexRef.current = nextIndex;\r\n            }, speed || DEFAULT_SPEED);\r\n        }\r\n        else if(playing) {\r\n            setCarouselIndex(0);\r\n            activeCarouselIndexRef.current = 0;\r\n        }\r\n\r\n        return () => {\r\n            if(carouselIntervalId.current) clearInterval(carouselIntervalId.current);\r\n        }\r\n    }, [playing, childElements.length]);\r\n\r\n    return (\r\n        <CarouselContainer>\r\n            {childElements.map((child, index, array) => (\r\n                <CarouselItem key={index} $active={index === carouselIndex} $isRelative={index === array.length - 1} speed={(transitionSpeed ? transitionSpeed : DEFAULT_TRANSITION_SPEED) / 2}>\r\n                    {child}\r\n                </CarouselItem>\r\n            ))}\r\n        </CarouselContainer>\r\n    )\r\n}\r\n\r\nconst CarouselContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst CarouselItem = styled.div<{$active: boolean, $isRelative: boolean, speed: number}>`\r\n    position: ${props => props.$isRelative ? `relative` : `absolute`};\r\n    max-height: 100%;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    opacity: ${props => props.$active ? 1 : 0};\r\n    transition: opacity ${props => props.speed}ms linear;\r\n    transition-delay: ${props => props.$active ? props.speed : 0}ms;\r\n`;","export const formatTimeHMSC = (ms: number): string => {\r\n\tms = ms > 0 ? ms : 0;\r\n\r\n\tconst hour = Math.floor(ms / 60 / 60 / 1000);\r\n\tms = ms % (60 * 60 * 1000);\r\n\r\n\tconst minute = Math.floor(ms / 60 / 1000);\r\n\tms = ms % (60 * 1000);\r\n\r\n\tconst second = Math.floor(ms / 1000);\r\n\tms = ms % 1000;\r\n\r\n\tconst centiseconds = Math.floor(ms / 10);\r\n\r\n\treturn `${hour}:${minute < 10 ? `0${minute}` : minute}:${second < 10 ? `0${second}` : second}.${centiseconds < 10 ? `0${centiseconds}` : centiseconds}`\r\n}\r\n\r\nexport const formatDateHM = (date: Date) => {\r\n\treturn date.getHours() + \":\" + ((date.getMinutes() < 10) ? \"0\" : \"\") + date.getMinutes();\r\n};\r\n\r\nexport const formatDateMDY = (date: Date) => {\r\n\treturn (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear();\r\n}"],"names":["React","useState","useEffect","useMemo","styled","createRoot","Omnibar","OmnibarOnly","StyledOmnibarOnly","div","withConfig","displayName","componentId","Content","root","document","getElementById","render","CarouselComponent","YoutubeLogo","DiscordLogo","TwitterLogo","Butterfly","EventData","Socials","EventInfo","useReplicant","IntermissionData","formatDateHM","formatDateMDY","FC","eventData","setEventData","bundle","socials","intermissionData","currentEvent","setCurrentEvent","name","location","number","date","time","setTime","Date","interval","setInterval","clearInterval","memoTime","showTime","showEvent","showLocation","showFlavorText","flavorText","youtube","twitter","bluesky","discord","OmnibarWrapper","OmnibarItem","$show","TextOmnibarItem","$maxWidth","OmnibarElement","props","$border","TimeDate","TimeDisplay","DateDisplay","EventSection","EventNumberText","Logo","img","LocationWrapper","LocationText","TourneyWrapper","TourneyPlaceholder","CarouselWrapper","CarouselRow","StyledYoutubeLogo","StyledTwitterLogo","StyledButterfly","StyledDiscordLogo","LogoText","useRef","CarouselComponentProps","children","ReactNode","playing","speed","transitionSpeed","once","startIndex","DEFAULT_SPEED","DEFAULT_TRANSITION_SPEED","carouselIndex","setCarouselIndex","carouselIntervalId","activeCarouselIndexRef","childElements","Children","toArray","length","current","window","nextIndex","map","child","index","array","CarouselContainer","CarouselItem","$isRelative","$active","formatTimeHMSC","ms","hour","Math","floor","minute","second","centiseconds","getHours","getMinutes","getMonth","getDate","getFullYear"],"version":3,"file":"omnibaronly.77ee2ba0.js.map","sourceRoot":"../"}