{"mappings":"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","sources":["src/graphics/Credits.tsx","src/graphics/components/CreditsNameRow.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport styled from 'styled-components'\r\nimport { CarouselComponent } from './components/CarouselComponent';\r\nimport { GithubLogo, DiscordLogo, TwitterLogo, Butterfly } from \"@phosphor-icons/react\";\r\nimport { createRoot } from 'react-dom/client';\r\nimport { useReplicant } from '@nodecg/react-hooks';\r\nimport { EventData, CreditsData, EventInfo } from 'schemas';\r\nimport { CreditsNameRow } from './components/CreditsNameRow';\r\n\r\nexport function Credits() {\r\n    const [eventData, setEventData] = useReplicant<EventData>('eventData', { bundle: 'squidwest-layout-controls'});\r\n\r\n    const [currentEvent, setCurrentEvent] = useState<EventInfo>({ name: \"Current Event Name\", location: \"Event Location\", number: 1, date: \"Today\" });\r\n\tconst [nextEvent, setNextEvent] = useState<EventInfo>({ name: \"Next Event Name\", location: \"Next Event Location\", number: 2, date: \"January 1, 2024\" });\r\n\r\n    const [creditsData, setCreditsData] = useReplicant<CreditsData>('creditsData', { bundle: 'squidwest-layout-controls'});\r\n\r\n\tconst [setupTeam, setSetupTeam] = useState([\"\"]);\r\n\tconst [commentaryTeam, setCommentaryTeam] = useState([\"\"]);\r\n\tconst [techTeam, setTechTeam] = useState([\"\"]);\r\n\tconst [staffTeam, setStaffTeam] = useState([\"\"]);\r\n\tconst [headTO, setHeadTO] = useState([\"\"]);\r\n\tconst [poolCaptains, setPoolCaptains] = useState([\"\"]);\r\n\tconst [artTeam, setArtTeam] = useState([\"\"]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!eventData) return;\r\n\r\n\t\tsetCurrentEvent(eventData.currentEvent);\r\n\t\tsetNextEvent(eventData.nextEvent);\r\n\t}, [eventData]);\r\n\r\n    useEffect(() => {\r\n\t\tif(!creditsData) return;\r\n   \r\n\t\tsetSetupTeam(creditsData.setupTeam);\r\n\t\tsetCommentaryTeam(creditsData.commentaryTeam);\r\n\t\tsetTechTeam(creditsData.techTeam);\r\n\t\tsetStaffTeam(creditsData.staffTeam);\r\n\t\tsetHeadTO(creditsData.headTO);\r\n\t\tsetPoolCaptains(creditsData.poolCaptains);\r\n\t\tsetArtTeam(creditsData.artTeam);\r\n\t}, [creditsData]);\r\n\r\n\treturn (\r\n        <StyledCredits>\r\n            <Content>\r\n                <CarouselComponent speed={10000} transitionSpeed={3000} once={true}>\r\n                    <CreditsRow>\r\n                        <TitleText>{currentEvent.name} {currentEvent.number > 0 ? '#' + currentEvent.number  : ''}</TitleText>\r\n                    </CreditsRow>\r\n                    {setupTeam.length > 0 && (<CreditsRow>\r\n                        <CreditsNameRow title=\"Setup and Teardown Volunteers\" names={setupTeam} />\r\n                    </CreditsRow>)}\r\n                    {commentaryTeam.length > 0 && (<CreditsRow>\r\n                        <CreditsNameRow title=\"Commentary\" names={commentaryTeam} />\r\n                    </CreditsRow>)}\r\n                    {techTeam.length > 0 && (<CreditsRow>\r\n                        <CreditsNameRow title=\"Stream Technicians\" names={techTeam} />\r\n                    </CreditsRow>)}\r\n                    {artTeam.length > 0 && (<CreditsRow>\r\n                        <CreditsNameRow title=\"Artists\" names={artTeam} />\r\n                    </CreditsRow>)}\r\n                    {staffTeam.length > 0 && (<CreditsRow>\r\n                        <LogoRow>\r\n                            <HeaderText>SquidWest TOs and Staff</HeaderText>\r\n                            <img src=\"/bundles/twinsquiddies-layouts/images/SW_Logo_Red_bg.png\" />\r\n                        </LogoRow>\r\n                        {\r\n                            staffTeam.map((name, index) => {\r\n                                return (\r\n                                    <NameText key={index}>{name}</NameText>\r\n                                )\r\n                            })\r\n                        }\r\n                    </CreditsRow>)}\r\n                    <CreditsRow>\r\n                        <EventLogo src=\"/bundles/twinsquiddies-layouts/images/TwinSquiddiesLogo.png\" />\r\n                        <CreditsColumns>\r\n                            <Rows>\r\n                                <CreditsNameRow title=\"Head TO\" names={headTO} />\r\n                            </Rows>\r\n                            <Rows>\r\n                                <CreditsNameRow title=\"Staff and Pool Captains\" names={poolCaptains} />\r\n                            </Rows>\r\n                        </CreditsColumns>\r\n                    </CreditsRow>\r\n                    <CreditsRow>\r\n                        <EventLogo src=\"/bundles/twinsquiddies-layouts/images/TwinSquiddiesLogo.png\" />\r\n                        <CreditsNameRow title=\"Production\" names={[\"MissPixiSix\", \"iMADgamerII\", \"Lilalychi\", \"Bits\", \"EpicYoshiMaster\"]} />\r\n                    </CreditsRow>\r\n                    <CreditsRow>\r\n                        <HeaderText>Stream Overlays and Design</HeaderText>\r\n                        <NameText>EpicYoshiMaster</NameText>\r\n                        <Divider />\r\n                        <NameText>Need stream overlays for your event?</NameText>\r\n                        <NameText>Contact me!</NameText>\r\n                        <YoshiRow>\r\n                            <DiscordLogo />\r\n                            <NameText>@epicyoshimaster</NameText>\r\n                        </YoshiRow>\r\n                        <YoshiRow>\r\n                            <TwitterLogo />\r\n                            <NameText>@EpicYoshiMaster</NameText>\r\n                        </YoshiRow>\r\n                        <YoshiRow>\r\n                            <GithubLogo />\r\n                            <NameText>EpicYoshiMaster</NameText>\r\n                        </YoshiRow>\r\n                        <YoshiRow>\r\n                            <Butterfly />\r\n                            <NameText>@epicyoshimaster.bsky.social</NameText>\r\n                        </YoshiRow>\r\n                    </CreditsRow>\r\n                    <CreditsRow>\r\n                        <HeaderText>Special Thanks</HeaderText>\r\n                    </CreditsRow>\r\n                    <CreditsRow>\r\n                        <LogoRow>\r\n                            <HeaderText>Left Click Lounge</HeaderText>\r\n                            <img src=\"/bundles/twinsquiddies-layouts/images/LeftClickLoungeLogo.png\" />\r\n                        </LogoRow>\r\n                        <NameText>Venue, equipment, and support</NameText>\r\n                    </CreditsRow>\r\n                    <CreditsRow>\r\n                        <HeaderText>Event Participants</HeaderText>\r\n                        <NameText>These events aren't possible without you</NameText>\r\n                    </CreditsRow>\r\n                    <CreditsRow>\r\n                        <HeaderText>Stream Viewers</HeaderText>\r\n                        <NameText>We hope you enjoyed</NameText>\r\n                    </CreditsRow>\r\n                    <CreditsRow>\r\n                        <TitleText>{nextEvent.name} {nextEvent.number > 0 ? '#' + nextEvent.number  : ''}</TitleText>\r\n                        <NameText>{nextEvent.location}</NameText>\r\n                        <NameText>{nextEvent.date}</NameText>\r\n                        <NameText>See you there!</NameText>\r\n                    </CreditsRow>\r\n                </CarouselComponent>\r\n            </Content>\r\n        </StyledCredits>\r\n    )\r\n}\r\n\r\nconst StyledCredits = styled.div`\r\n    position: relative;\r\n\r\n    width: 1920px;\r\n    height: 1080px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    position: relative;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    color: var(--credits-text);\r\n    background-color: var(--credits-bg);\r\n\r\n    overflow: hidden;\r\n`;\r\n\r\nconst TitleText = styled.div`\r\n    font-weight: bolder;\r\n    font-size: 7rem;\r\n`;\r\n\r\nconst HeaderText = styled.div`\r\n    font-weight: bolder;\r\n    font-size: 6rem;\r\n`;\r\n\r\nconst NameText = styled.div`\r\n    font-weight: normal;\r\n    font-size: 3.5rem;\r\n`;\r\n\r\nconst CreditsRow = styled.div`\r\n    position: relative;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst CreditsColumns = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: flex-start;\r\n`;\r\n\r\nconst Rows = styled.div`\r\n    position: relative;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst LogoRow = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    & img {\r\n        margin-left: 20px;\r\n        margin-bottom: 20px;\r\n        height: 12.5rem;\r\n    }\r\n`;\r\n\r\nconst EventLogo = styled.img`\r\n    height: 35rem;\r\n`;\r\n\r\nconst YoshiRow = styled(LogoRow)`\r\n    \r\n    svg {\r\n    width: 1em;\r\n    object-fit: contain;\r\n    margin-right: 20px;\r\n    font-size: 50px;\r\n   } \r\n`;\r\n\r\nconst Divider = styled.div`\r\n    width: 100%;\r\n    height: 10%;\r\n`;\r\n\r\nconst root = createRoot(document.getElementById('root')!);\r\nroot.render(<Credits />);","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface NameRowProps {\r\n    title: string;\r\n    names: string[];\r\n}\r\n\r\nexport const CreditsNameRow: React.FC<NameRowProps> = ({ title, names }) => {\r\n    return (\r\n        <Row>\r\n            <HeaderText>{title}</HeaderText>\r\n            {\r\n            names.map((item, index) => {\r\n                return <NameText key={index}>{item}</NameText>\r\n            })\r\n            }\r\n        </Row>\r\n    );\r\n};\r\n\r\nconst Row = styled.div`\r\n    display: contents;\r\n`;\r\n\r\nconst HeaderText = styled.div`\r\n    font-weight: bolder;\r\n    font-size: 6rem;\r\n`;\r\n\r\nconst NameText = styled.div`\r\n    font-weight: normal;\r\n    font-size: 3.5rem;\r\n`;"],"names":["React","useState","useEffect","useMemo","styled","CarouselComponent","GithubLogo","DiscordLogo","TwitterLogo","Butterfly","createRoot","useReplicant","EventData","CreditsData","EventInfo","CreditsNameRow","Credits","eventData","setEventData","bundle","currentEvent","setCurrentEvent","name","location","number","date","nextEvent","setNextEvent","creditsData","setCreditsData","setupTeam","setSetupTeam","commentaryTeam","setCommentaryTeam","techTeam","setTechTeam","staffTeam","setStaffTeam","headTO","setHeadTO","poolCaptains","setPoolCaptains","artTeam","setArtTeam","length","map","index","StyledCredits","div","withConfig","displayName","componentId","Content","TitleText","HeaderText","NameText","CreditsRow","CreditsColumns","Rows","LogoRow","EventLogo","img","YoshiRow","Divider","root","document","getElementById","render","NameRowProps","title","names","FC","item","Row"],"version":3,"file":"credits.e377084f.js.map","sourceRoot":"../"}